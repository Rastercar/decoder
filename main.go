package main

import (
	"context"
	"fmt"
	"log"
	"os"
	dec "reciever-ms/protocols/h02/decoder"
	h02 "reciever-ms/protocols/h02/handler"
	"reciever-ms/tcp"
	"reciever-ms/tracer"
)

func startTracer() {
	cfg := tracer.Config{
		ServiceName:    "positions-ms",
		ExportEndpoint: "http://localhost:14268/api/traces",
	}

	if err := tracer.SetGlobalTracer(&cfg); err != nil {
		log.Fatalf("[TRACER] failed to init tracer: %v", err)
	}
}

func main() {
	ctx, cancel := context.WithCancel(context.Background())
	defer cancel()

	startTracer()
	defer tracer.Stop(ctx)

	// todo: rm me
	// TODO: TEST DATETIME FUSO WITH REAL DATA
	d := dec.New(true)
	_, err := d.Decode([]byte{
		0x2a, 0x48, 0x51, 0x2c, 0x38, 0x36, 0x37, 0x32, 0x33, 0x32, 0x30, 0x35, 0x31, 0x31, 0x34, 0x38, 0x33, 0x35, 0x32, 0x2c, 0x56, 0x31, 0x2c, 0x30, 0x34, 0x34, 0x36, 0x33, 0x39, 0x2c, 0x41, 0x2c, 0x32, 0x30, 0x32, 0x37, 0x2e, 0x39, 0x33, 0x32, 0x39, 0x30, 0x2c, 0x53, 0x2c, 0x30, 0x35, 0x34, 0x33, 0x34, 0x2e, 0x39, 0x34, 0x33, 0x38, 0x39, 0x2c, 0x57, 0x2c, 0x30, 0x2e, 0x30, 0x30, 0x2c, 0x30, 0x2c, 0x31, 0x31, 0x30, 0x37, 0x32, 0x32, 0x2c, 0x46, 0x46, 0x46, 0x46, 0x46, 0x42, 0x46, 0x46, 0x23, 0x0d, 0x0a,
	})
	if err != nil {
		println(err.Error())
	}

	if 2+2 == 5 {
		err := tcp.Listen(":3003", h02.HandleRequest)

		if err != nil {
			fmt.Printf("\n[SERVER] Failed to start: %v", err)
			os.Exit(1)
		}
	}
}
